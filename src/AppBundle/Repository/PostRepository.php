<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PostRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{

    /**
     * @param $currentPage
     * @param $limit
     * @return Paginator
     */
    public function findAllPostsWithDependencies($currentPage, $limit)
    {
        $query = $this->createQueryBuilder('p')
            ->select('p, a')
            ->leftJoin('p.author', 'a')
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery()
            ->setFirstResult($limit * ($currentPage -1))
            ->setMaxResults($limit);

        return new Paginator($query);

    }

    public function countAllPosts()
    {
        return $this->createQueryBuilder('p')
            ->select('count(p.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function findPostBySlug($slug)
    {
        return $this->createQueryBuilder('p')
            ->select('p, a, c')
            ->leftJoin('p.comments', 'c')
            ->leftJoin('p.author', 'a')
            ->where('p.slug = :slug')
            ->setParameter('slug', $slug)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function findTopPosts($number = 5)
    {
        return $this->createQueryBuilder('p')
            ->select('p, c, a, avg(c.rating) as rating')
            ->leftJoin('p.comments', 'c')
            ->join('p.author', 'a')
            ->groupBy('p, a')
            ->orderBy('rating', 'DESC')
            ->getQuery()
            ->setMaxResults($number)
            ->getResult();
    }

    public function searchPosts($text)
    {
        return $this->createQueryBuilder('p')
            ->select('p, t')
            ->leftJoin('p.tags', 't')
            ->where('p.title LIKE :text' )
            ->orWhere('t.name = :name')
            ->setParameter('text', '%'.$text.'%')
            ->setParameter('name', $text)
            ->getQuery()
            ->getResult();

    }
}
